<%- include('./partials/header') %>

<div class="w-full min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8 font-[Poppins] mt-[-2rem]">
    <div class="max-w-7xl mx-auto">
        <h1 class="text-3xl font-extrabold text-gray-900 mb-8 font-[Lato]">Your Shopping Cart</h1>
        
        <% if (typeof error !== 'undefined' && error.length > 0) { %>
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-8" role="alert">
                <p class="font-bold">Error</p>
                <p><%= error[0] %></p>
                <a href="/shop" class="mt-2 inline-block px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition duration-300">Return to Shop</a>
            </div>
        <% } else if (validProducts && validProducts.length > 0) { %>
            <div class="flex flex-col lg:flex-row gap-8 font-[Poppins]">
                <!-- Cart Items Section -->
                <div class="lg:w-2/3">
                    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                        <div class="p-6">
                            <h2 class="text-2xl font-semibold text-gray-800 mb-6">Cart Items</h2>
                            <div class="space-y-6">
                                <% validProducts.forEach(function(cart) { %>
                                    <% if (cart && cart._id) { %>
                                        <div class="flex items-center border-b border-gray-200 pb-6 product-cart-item" data-product-id="<%= cart._id %>">
                                            <div class="w-32 h-32 flex-shrink-0 overflow-hidden rounded-md">
                                                <img class="w-full h-full object-contain" 
                                                     src="data:image/jpeg;base64, <%= cart.image ? cart.image.toString('base64') : '' %>" 
                                                     alt="<%= cart.name %>"
                                                     onerror="this.src='/path/to/default/image.jpg';">
                                            </div>
                                            <div class="ml-4 flex flex-1 flex-col">
                                                <div>
                                                    <div class="flex justify-between text-base font-medium text-gray-900">
                                                        <h3 class="truncate max-w-[200px]"><%= cart.name %></h3>
                                                        <p class="ml-4 product-total-price"><%= formatPrice((cart.price - cart.discount) * cart.quantity) %></p>
                                                    </div>
                                                </div>
                                                <div class="flex flex-1 items-end justify-between text-sm">
                                                    <div class="flex items-center border rounded-lg quantity-control">
                                                        <button 
                                                            class="decrease-quantity px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-l-lg"
                                                            data-product-id="<%= cart._id %>"
                                                            <%= cart.quantity <= 1 ? 'disabled' : '' %>
                                                        >-</button>
                                                        <span class="px-3 py-1 text-gray-600 product-quantity"><%= cart.quantity %></span>
                                                        <button 
                                                            class="increase-quantity px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-r-lg"
                                                            data-product-id="<%= cart._id %>"
                                                        >+</button>
                                                    </div>
                                                    <div class="flex">
                                                        <button 
                                                            class="remove-from-cart font-medium text-red-600 hover:text-red-500"
                                                            data-product-id="<%= cart._id %>"
                                                        >Remove</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <% } %>
                                <% }); %>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Order Summary Section -->
                <div class="lg:w-1/3">
                    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                        <div class="p-6">
                            <h2 class="text-2xl font-semibold text-gray-800 mb-6">Order Summary</h2>
                            <% 
                                let totalMRP = validProducts.reduce((sum, cart) => sum + cart.price * cart.quantity, 0);
                                let totalDiscount = validProducts.reduce((sum, cart) => sum + cart.discount * cart.quantity, 0);
                                let platformFee = totalMRP > 500 ? 0 : 20;
                                let totalAmount = totalMRP - totalDiscount + platformFee;
                            %>
                            <div class="space-y-4">
                                <div class="flex justify-between text-base text-gray-600">
                                    <p>Total MRP</p>
                                    <p id="total-mrp"><%= formatPrice(totalMRP) %></p>
                                </div>
                                <div class="flex justify-between text-base text-gray-600">
                                    <p>Discount on MRP</p>
                                    <p id="total-discount" class="text-green-600">- <%= formatPrice(totalDiscount) %></p>
                                </div>
                                <div class="flex justify-between text-base text-gray-600">
                                    <p>Platform Fee</p>
                                    <p id="platform-fee"><%= formatPrice(platformFee) %></p>
                                </div>
                                <div class="flex justify-between text-base text-gray-600">
                                    <p>Shipping Fee</p>
                                    <p class="text-green-600">FREE</p>
                                </div>
                                <div class="border-t border-gray-200 pt-4">
                                    <div class="flex justify-between text-lg font-semibold text-gray-900">
                                        <p>Total Amount</p>
                                        <p id="total-amount"><%= formatPrice(totalAmount) %></p>
                                    </div>
                                </div>
                            </div>
                            
                            <% if (validProducts.length > 0) { %>
                                <button 
                                    id="razorpay-checkout-btn" 
                                    class="mt-8 w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-300"
                                >
                                    Proceed to Checkout
                                </button>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        <% } else { %>
            <div class="text-center py-16 bg-white shadow-lg rounded-lg">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <h2 class="mt-2 text-2xl font-semibold text-gray-900">Your cart is empty</h2>
                <p class="mt-1 text-gray-500">Looks like you haven't added any items to your cart yet.</p>
                <a href="/shop" class="mt-6 inline-block px-6 py-3 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-300">
                    Continue Shopping
                </a>
            </div>
        <% } %>
    </div>
</div>

<%- include('./partials/footer') %>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script> 
      const validProducts = JSON.parse('<%- JSON.stringify(validProducts) %>');
</script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const checkoutBtn = document.getElementById('razorpay-checkout-btn');
    
    // Enhanced client-side quantity and cart management
    function updateQuantity(productId, action) {
        fetch(`/cart?action=${action}&productId=${productId}`, {
            method: 'GET',
        })
        .then(response => {
            if (response.ok) {
                window.location.reload();
            } else {
                throw new Error('Failed to update quantity');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update cart. Please try again.');
        });
    }

    // Quantity control event listeners
    document.querySelectorAll('.increase-quantity').forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.dataset.productId;
            updateQuantity(productId, 'increase');
        });
    });

    document.querySelectorAll('.decrease-quantity').forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.dataset.productId;
            updateQuantity(productId, 'decrease');
        });
    });

    // Remove from cart event listener
    document.querySelectorAll('.remove-from-cart').forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.dataset.productId;
            fetch(`/removefromcart/${productId}`, {
                method: 'GET',
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    throw new Error('Failed to remove item');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to remove item. Please try again.');
            });
        });
    });

    // Razorpay checkout
 
    if (checkoutBtn) {
        checkoutBtn.onclick = async function(e) {
            e.preventDefault();
            
            try {
                const response = await fetch('/checkout/create-order', { 
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        cart: validProducts.map(product => ({
                            productId: product._id,
                            quantity: product.quantity,
                            price: product.price,
                            discount: product.discount || 0
                        }))
                    })
                });
                
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to create order');
                }
                
                const data = await response.json();
                
                const options = {
                    key: data.keyId,
                    amount: data.amount,
                    currency: data.currency,
                    name: "Your Store Name",
                    description: "Product Purchase",
                    order_id: data.orderId,
                    handler: async function (response) {
                        try {
                            const result = await fetch('/checkout/payment-success', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature
                                })
                            });
                            
                            const verificationData = await result.json();
                            
                            if (verificationData.success) {
                                alert('Payment Successful!');
                                window.location.href = '/order-confirmation';
                            } else {
                                alert(verificationData.message || 'Payment Failed. Please try again.');
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            alert('An error occurred while verifying the payment. Please contact support.');
                        }
                    },
                    prefill: {
                        name: "<%= locals.user ? user.name : '' %>",
                        email: "<%= locals.user ? user.email : '' %>",
                        contact: "<%= locals.user ? user.phone : '' %>"
                    },
                    theme: {
                        color: "#3399cc"
                    }
                };
                
                const rzp1 = new Razorpay(options);
                rzp1.open();
                
            } catch (error) {
                console.error('Checkout error:', error);
                alert(error.message || 'An error occurred during checkout. Please try again later.');
            }
        };
    }
});
</script>